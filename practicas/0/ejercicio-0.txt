2. Ejemplo 1: Gorutina básica

-¿Cuántas gorutinas se lanzan en este código, incluyendo la que ejecuta el hilo principal del programa?
Respuesta: Se lanzan dos, la principal y la de spinner

-¿Cómo puede mostrarse el símbolo de spinner girando en la pantalla del terminal aunque se esté
ejecutando el cálculo de 45º número de Fibonnaci?
Respuesta: Porque es una gorutina que ejecuta a la vez que el programa principal.

-¿Por qué se deja de ver al spinner girando cuando el programa muestra el resultado con el número
de Fibonacci solicitado?
Respuesta: cuando acaba la gorutina principal, como la otra gorutina es un hilo del programa
principal, si muere el principal, mueren los hilos
+++++++++++++++++++++++++++++++++++++++++++++++
3. Ejemplo 2: Clock server concurrente

1. Una vez lanzado el programa ’clock1’, utiliza el comando netcat para conectarte con el servidor
 que escucha en el puerto TCP 8000. Puedes usar el comando:
 usuario@machine:~$ nc localhost 8000

 2. Ahora, abre otra ventana de terminal de Linux (u otra pestaña en la misma ventana de terminal)
y lanza dos procesos clientes de nuestro servidor de hora simultáneamente. ¿Es capaz de atender
el servidor a los dos clientes a la vez? ¿Por qué?
Respuesta: No porque se queda el handler en cola atendiendo a un unico proceso a la vez.

3. Modifica el programa anterior para que se garantice que atiende a dos o más clientes de forma
simultánea.
Respuesta: Lo que hay que hacer es poner una gorutina delante del handler y listo: go handleConn(conn)
+++++++++++++++++++++++++++++++++++++++++++++++
4. Ejercicio: relojes con zonas horarias
1. El programa go get gopl.io/ch8/netcat1 muestra cómmo programar un emulador sencillo del programa
 netcat en lenguaje Go, usando la función net.Dial.

 
